{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["src_App_0","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","assign","readMore","activeStep","accountSID","authToken","fromPhone","credValid","loading","ownPhone","comrades","message","JSON","parse","window","localStorage","txtrLS","step","bind","assertThisInitialized","toggleReadMore","haveCred","validate","backup","sendTest","stringify","isStepBack","_this2","setState","_this$state","_this3","_this$state2","basic","fetch","headers","Authorization","btoa","then","body","json","resp","code","catch","e","console","error","Date","shootText","setTimeout","alert","_this4","react_default","a","createElement","className","style","fontSize","color","tabIndex","type","onClick","preventDefault","lib_default","steps","title","id","onChange","target","value","disabled","App_ComradeInput","submit","filter","c","test","map","i","key","App_Communications","senderTest","senderAny","to","done","float","Component","phone","require","attemptToStandarizePhone","number","result","length","ComradeInput","_this5","customDelimiter","delimiter","click","labelStyle","width","split","_this6","name","checked","indexOf","Communications","_this7","log","meatAndPotatoes","errors","sendNextText","comradeIndex","err","push","_this8","btnStyle","borderRadius","display","lineHeight","margin","background","sid","token","From","Body","To","callback","arguments","url","concat","details","k","eK","encodeURIComponent","eDetail","bodyStr","join","method","Content-Type","response","error_code","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c03f5102.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './App.css';\n\nimport Stepper from 'react-stepper-horizontal';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = Object.assign({\n      readMore: false,\n      activeStep: 0,\n      accountSID: '',\n      authToken: '',\n      fromPhone: '',\n      credValid: false,\n      loading: false,\n      ownPhone: '',\n      comrades: [],\n      message: ''\n    }, JSON.parse(window.localStorage.txtrLS));\n\n    this.step = this.step.bind(this);\n    this.toggleReadMore = this.toggleReadMore.bind(this);\n    this.haveCred = this.haveCred.bind(this);\n    this.validate = this.validate.bind(this);\n    this.backup = this.backup.bind(this);\n    this.sendTest = this.sendTest.bind(this);\n  }\n\n  backup() {\n    window.localStorage.txtrLS = JSON.stringify(this.state);\n  }\n\n  step(isStepBack) {\n    var { activeStep } = this.state;\n    activeStep += (isStepBack ? -1 : 1);\n    this.setState({\n      activeStep\n    }, () => this.backup());\n  }\n\n  toggleReadMore() {\n    this.setState({ readMore: !this.state.readMore });\n  }\n\n  haveCred() {\n    var { accountSID, authToken, fromPhone } = this.state;\n    return accountSID !== '' && authToken !== '' && fromPhone !== '';\n  }\n\n  validate() {\n    if (!this.haveCred() || this.credValid) return;\n    this.setState({ loading: true });\n\n    // var { accountSID, authToken, fromPhone } = this.state;\n    var { accountSID, authToken } = this.state;\n    var basic = accountSID + ':' + authToken;\n\n    window.fetch(\"https://messaging.twilio.com/v1/Services\", {\n      headers: {\n        Authorization: \"Basic \" + btoa(basic)\n      }\n    }).then(body => body.json()).then(resp => {\n      this.setState({\n        loading: false,\n        credValid: !resp.code\n      });\n    }).catch(e => {\n      this.setState({ loading: false });\n      console.error(e);\n    });\n  }\n\n  sendTest() {\n    var body = 'Sending Txtr Test: ' + new Date();\n    shootText(\n      this.state.accountSID,\n      this.state.authToken,\n      this.state.fromPhone,\n      body,\n      this.state.ownPhone,\n      function (e) {\n        if (e) { setTimeout(function() { alert(\"Error \" + e.message); }); }\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"container mt-5\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <h1>\n              Txtr\n              <span style={ { fontSize: '.4em', color: '#ccc' } }>\n                Sending Txts to everyone around\n              </span>\n            </h1>\n            <h3>How to use it</h3>\n            <p className={ this.state.readMore ? \"\" : \"collapse\"}>\n              First, get a Twilio Acct. Get three pieces of information from\n              there: SID, Token, and the phone number you bought there for a\n              dollar. Type those in at step 1.\n            </p>\n\n            <p className={ this.state.readMore ? \"\" : \"collapse\"}>\n              Proceed to step two, where you can enter a delimiter separated\n              list of phone numbers (format <code>+1XXXYYYZZZZ</code> of\n              course). See a preview of the recognized numbers on this screen\n              as well.\n            </p>\n            <p className={ this.state.readMore ? \"\" : \"collapse\"}>\n              Next proceed to step three, and hit send, noting send successes\n              (and failures).\n            </p>\n            <p className={ this.state.readMore ? \"\" : \"collapse\"}>\n              On step four, share in the fruits of organizing for the\n              collective liberation of the working classes.\n            </p>\n            <p className={ this.state.readMore ? \"\" : \"collapse\"}>\n              When you switch steps, your entered information is saved locally\n              so that when you refresh the page it's still there.\n            </p>\n\n            <button\n              tabIndex={-1}\n              type=\"button\"\n              className=\"btn btn-link\"\n              onClick={ function(e) {\n                e.preventDefault();\n                this.toggleReadMore();\n              }.bind(this) }\n              >\n              Read\n              { ' ' }\n              { this.state.readMore ? 'less': 'more' }\n              ...\n            </button>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <Stepper\n              steps={ [\n                {\n                  title: 'Credentials',\n                  onClick: (e) => {\n                    e.preventDefault();\n                    this.setState({ activeStep: 0 });\n                  }\n                }, \n                {\n                  title: 'Comrades',\n                  onClick: (e) => {\n                    e.preventDefault();\n                    this.setState({ activeStep: 1 });\n                  }\n                },\n                {\n                  title: 'Communications',\n                  onClick: (e) => {\n                    e.preventDefault();\n                    this.setState({ activeStep: 2 });\n                  }\n                },\n                {\n                  title: 'Communism',\n                  onClick: (e) => {\n                    e.preventDefault();\n                    this.setState({ activeStep: 3 });\n                  }\n                }\n              ] }\n              activeStep={ this.state.activeStep }\n              />\n\n            <div id=\"cred\" className={ this.state.activeStep === 0 ? '' : 'collapse' }>\n              <div className=\"row\">\n                <div className=\"col-md-4\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    onChange={ (e) => {\n                      this.setState({\n                        accountSID: e.target.value, credValid: false\n                      });\n                    } }\n                    value={ this.state.accountSID }\n                    />\n                  <small className=\"text-muted\">\n                    Enter your Account SID here.\n                  </small>\n                </div>\n                <div className=\"col-md-4\">\n                  <input \n                    type=\"password\" \n                    className=\"form-control\" \n                    onChange={ (e) => {\n                      this.setState({\n                        authToken: e.target.value, credValid: false\n                      });\n                    } }\n                    value={ this.state.authToken }\n                    />\n                  <small className=\"text-muted\">\n                    Enter your Auth Token here.\n                  </small>\n                </div>\n                <div className=\"col-md-4\">\n                  <input \n                    type=\"text\" \n                    className=\"form-control\" \n                    onChange={ (e) => {\n                      this.setState({\n                        fromPhone: e.target.value, credValid: false\n                      });\n                    } }\n                    value={ this.state.fromPhone }\n                    />\n                  <small className=\"text-muted\">\n                    Enter your <code>From:</code> phone number here.\n                    </small>\n                </div>\n              </div>\n              <div className=\"m-3\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-warning btn-sm\"\n                  onClick={ this.validate }\n                  disabled={ !this.haveCred() || this.state.loading || this.state.credValid }\n                  >\n                  Validate\n                  { this.state.credValid ? 'd' : null }\n                </button>\n                <span className=\"ml-3\">\n                  { this.state.loading ? 'Loading...' : null }\n                  { this.state.credValid ? 'Validated!' : 'Invalid.' }\n                </span>\n              </div>\n              <input \n                type=\"text\" \n                className=\"form-control\" \n                onChange={ (e) => {\n                  this.setState({ ownPhone: e.target.value });\n                } }\n                value={ this.state.ownPhone }\n                />\n              <small className=\"text-muted\">\n                Optionally, enter your own phone number here to send yourself\n                a test message.\n              </small>\n              <div className=\"m-3\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-warning btn-sm\"\n                  onClick={ this.sendTest }\n                  disabled={ !this.state.credValid }\n                  >\n                  Send\n                </button>\n              </div>\n            </div>\n            <div\n              id=\"comr\"\n              className={ this.state.activeStep === 1 ? '' : 'collapse' }\n              >\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <ComradeInput\n                    submit={(comrades) => this.setState({ comrades })}\n                    />\n                </div>\n                <div className=\"col-md-6\">\n                  <p>Preview phone number list:</p>\n                  <p>Valid (<code>{'^\\\\+1[\\\\d]{10}$'}</code>):</p>\n                  <ul>\n                    {this.state.comrades.filter(c => {\n                      return /^\\+1[\\d]{10}$/.test(c);\n                    }).map((c, i) => {\n                      return <li key={i}>{c}</li>;\n                    })}\n                  </ul>\n                  Invalid:\n                  <ul>\n                    {this.state.comrades.filter(c => {\n                      return !/^\\+1[\\d]{10}$/.test(c)\n                    }).map((c, i) => {\n                      return <li key={i}>{c}</li>;\n                    })}\n                  </ul>\n                </div>\n              </div>\n            </div>\n            <div id=\"comm\" className={ this.state.activeStep === 2 ? '' : 'collapse' }>\n              <div className=\"m-3\">\n                <div className=\"row\">\n                  <div className=\"col-md-3 text-right\">\n                    <p><small className=\"text-muted\">Enter body of mass message:</small></p>\n                  </div>\n                  <div className=\"col-md-9\">\n                    <textarea\n                      id=\"testing\"\n                      value={ this.state.message }\n                      onChange={ (e) => this.setState({ message: e.target.value }) }\n                      >\n                    </textarea>\n                  </div>\n                </div>\n              </div>\n              <Communications\n                comrades={ this.state.comrades }\n                senderTest={ shootText.bind(null,\n                  this.state.accountSID,\n                  this.state.authToken,\n                  this.state.fromPhone,\n                  this.state.message,\n                  this.state.ownPhone) }\n                senderAny={ (to, done) => {\n                  shootText(\n                    this.state.accountSID,\n                    this.state.authToken,\n                    this.state.fromPhone,\n                    this.state.message,\n                    to, done);\n                  } }\n                />\n            </div>\n            <div id=\"cmnm\" className={ this.state.activeStep === 3 ? '' : 'collapse' }>\n              {/*<p>Check out a local chapter of DSA sometime!</p>*/}\n              <p>Lorem ipsum amet adipisicing sint sed et enim eiusmod nulla occaecat aliqua anim magna culpa non sunt in do.</p>\n            </div>\n\n            <div style={{ float: 'right' }}>\n            <button\n              onClick={ () => this.step(1) }\n              type=\"button\"\n              className=\"btn btn-warning\"\n              disabled={ this.state.activeStep === 0 }>Back</button>\n            <button\n              onClick={ () => this.step(0) }\n              type=\"button\"\n              className=\"btn btn-success ml-2\"\n              disabled={ this.state.activeStep === 3 }>Next</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// import React, { Component } from 'react';\n\nvar phone = require('phone');\n\nfunction attemptToStandarizePhone(number) {\n  var result = phone(number);\n  if (result && result.length > 0) { return result[0]; }\n  return number;\n}\n\n\nclass ComradeInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      comrades: '',\n      customDelimiter: ' ',\n      delimiter: ' ',\n    };\n\n    this.click = this.click.bind(this);\n\n    this.labelStyle = { width: '25%' };\n  }\n\n  click () {\n    var comrades = this.state.comrades.split(this.state.delimiter);\n    this.props.submit(comrades.map(attemptToStandarizePhone));\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"m-3\">\n          <p><small className=\"text-muted\">Paste phone numbers.</small></p>\n          <textarea\n            value={ this.state.comrades }\n            onChange={ (e) => this.setState({ comrades: e.target.value }) }\n            >\n          </textarea>\n        </div>\n        <div className=\"m-3\">\n          <p><small className=\"text-muted\">Select delimiter.</small></p>\n          <label className=\"c-input c-radio\" style={this.labelStyle}>\n            <input\n              id=\"radio1\"\n              name=\"radio\"\n              type=\"radio\"\n              checked={this.state.delimiter === \" \"}\n              onChange={() => this.setState({ delimiter: \" \"})}\n              />\n            <span className=\"c-indicator\"></span>\n            { ' ' }\n            Space\n          </label>\n          <label className=\"c-input c-radio\" style={this.labelStyle}>\n            <input\n              id=\"radio2\"\n              name=\"radio\"\n              type=\"radio\"\n              checked={this.state.delimiter === \"\\t\"}\n              onChange={() => this.setState({ delimiter: \"\\t\"})}\n              />\n            <span className=\"c-indicator\"></span>\n            { ' ' }\n            Tab\n          </label>\n          <label className=\"c-input c-radio\" style={this.labelStyle}>\n            <input\n              id=\"radio3\"\n              name=\"radio\"\n              type=\"radio\"\n              checked={this.state.delimiter === \"\\n\"}\n              onChange={() => this.setState({ delimiter: \"\\n\"})}\n              />\n            <span className=\"c-indicator\"></span>\n            { ' ' }\n            Enter\n          </label>\n          <label className=\"c-input c-radio\" style={this.labelStyle}>\n            <input\n              id=\"radio4\"\n              name=\"radio\"\n              type=\"radio\"\n              checked={\" \\t\\n\".indexOf(this.state.delimiter) === -1}\n              onChange={() => this.setState({ delimiter: this.state.customDelimiter })}\n              />\n            <span className=\"c-indicator\"></span>\n            { ' ' }\n            Custom:\n          </label>\n          <input\n\n            id=\"custom-delimiter\"\n            type=\"text\" \n            className=\"form-control\"\n            onChange={ (e) => {\n              this.setState({ customDelimiter: e.target.value });\n            } }\n            value={ this.state.customDelimiter }\n            />\n          <small className=\"text-muted\">Specify custom delimiter.</small>\n        </div>\n          \n        <button\n          onClick={ this.click }\n          type=\"button\"\n          className=\"btn btn-dark btn-sm\">\n          Preview\n        </button>\n      </div>\n    );\n  }\n}\n\n// export default ComradeInput;\n\n\n// import React, { Component } from 'react';\n\n\nclass Communications extends Component {\n  static propTypes = {\n    comrades: PropTypes.arrayOf(PropTypes.string).isRequired,\n    senderTest: PropTypes.func.isRequired,\n    senderAny: PropTypes.func.isRequired,\n  }\n\n  constructor(props) {\n    super(props);\n    console.log(props);\n\n    this.meatAndPotatoes = this.meatAndPotatoes.bind(this);\n  }\n\n  meatAndPotatoes() {\n    var errors = [];\n    (function sendNextText(comrades, comradeIndex) {\n      if (comradeIndex === comrades.length) {\n        alert(\"there were \" + errors.length + \" errors.\");\n        console.log(errors);\n        return; // were done\n      }\n\n      this.props.senderAny(comrades[comradeIndex], function (err) {\n        if (err) { errors.push(err); }\n        sendNextText(comrades, comradeIndex + 1);\n      });\n    }.bind(this))(this.props.comrades, 0);\n  }\n\n  render() {\n    var btnStyle = {\n      borderRadius: '100%',\n      display: 'inline-block',\n      lineHeight: '200px',\n      width: '210px',\n      margin: '0 auto'\n    };\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 text-center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-light btn-sm\"\n            style={ Object.assign({ background: '#e95' }, btnStyle) }\n            onClick={ (e) => this.props.senderTest(err => alert(err)) }\n            >\n            Send me a test message\n          </button>\n        </div>\n        <div className=\"col-md-6 text-center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-light btn-sm\"\n            style={ Object.assign({ background: '#4f3' }, btnStyle) }\n            onClick={ (e) => this.meatAndPotatoes(e) }\n            >\n            Send mass text message\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\n// export default Communications;\n\nfunction shootText(sid, token, From, Body, To, callback) {\n  console.log(arguments);\n  var url = `https://api.twilio.com/2010-04-01/Accounts/${sid}/Messages.json`;\n  // var url = `http://localhost:3030`;\n  var basic = sid + ':' + token;\n\n  var body = [];\n  var details = { From, Body, To };\n  for (var k in details) {\n    var eK = encodeURIComponent(k);\n    var eDetail = encodeURIComponent(details[k]);\n    body.push(eK + '=' + eDetail);\n  }\n  var bodyStr = body.join('&');\n\n\n  fetch(url, {\n    method: 'post',\n    headers: {\n      Authorization: \"Basic \" + btoa(basic),\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: bodyStr\n  })\n    .then(response => response.json())\n    .then(body => {\n      if (body.error_code !== null) {\n        callback(body);\n      }\n    })\n    .then(callback.bind(null, null))\n    .catch(callback);\n}\n\nfunction testShootText() {\n  var myTestSid = 'ACd013d591455511844cb082cdfeb6219c';\n  var myTestTok = 'a4f8a3f066076b3d71aa2ee22ca85ae1';\n  var twMagicNo = '+15005550006';\n\n  var myNo = '+12679925122';\n\n  shootText(myTestSid, myTestTok, twMagicNo, 'ok', myNo, function (err) {\n    console.log(\"done with err:\", err);\n  });\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nwindow.localStorage.txtrLS = window.localStorage.txtrLS || \"{}\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}